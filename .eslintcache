[{"/Users/tahmed/Desktop/mastermind/mastermind/src/index.js":"1","/Users/tahmed/Desktop/mastermind/mastermind/src/App.js":"2","/Users/tahmed/Desktop/mastermind/mastermind/src/reportWebVitals.js":"3","/Users/tahmed/Desktop/mastermind/mastermind/src/components/answers/answer.js":"4","/Users/tahmed/Desktop/mastermind/mastermind/src/components/input/input.js":"5","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/apikey.js":"6","/Users/tahmed/Desktop/mastermind/mastermind/src/components/fetch/index.js":"7","/Users/tahmed/Desktop/mastermind/mastermind/src/components/flexbox/index.js":"8","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/dummyData.js":"9","/Users/tahmed/Desktop/mastermind/mastermind/src/store/index.js":"10","/Users/tahmed/Desktop/mastermind/mastermind/src/components/main/main.js":"11","/Users/tahmed/Desktop/mastermind/mastermind/src/reducers/index.js":"12","/Users/tahmed/Desktop/mastermind/mastermind/src/components/register/register.js":"13","/Users/tahmed/Desktop/mastermind/mastermind/src/actions/userActions.js":"14","/Users/tahmed/Desktop/mastermind/mastermind/src/reducers/userReducer.js":"15","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/action-types.js":"16","/Users/tahmed/Desktop/mastermind/mastermind/src/components/countdownwrapper/index.js":"17"},{"size":620,"mtime":1610893510640,"results":"18","hashOfConfig":"19"},{"size":697,"mtime":1610896901211,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610731866693,"results":"21","hashOfConfig":"19"},{"size":3719,"mtime":1610900306338,"results":"22","hashOfConfig":"19"},{"size":2271,"mtime":1610893510638,"results":"23","hashOfConfig":"19"},{"size":482,"mtime":1610803753123,"results":"24","hashOfConfig":"19"},{"size":1549,"mtime":1610805740471,"results":"25","hashOfConfig":"19"},{"size":531,"mtime":1610893498807,"results":"26","hashOfConfig":"27"},{"size":2902,"mtime":1610893498809,"results":"28","hashOfConfig":"19"},{"size":332,"mtime":1610893510641,"results":"29","hashOfConfig":"19"},{"size":1775,"mtime":1610896896947,"results":"30","hashOfConfig":"19"},{"size":181,"mtime":1610893510640,"results":"31","hashOfConfig":"19"},{"size":2428,"mtime":1610893510639,"results":"32","hashOfConfig":"19"},{"size":689,"mtime":1610893510638,"results":"33","hashOfConfig":"19"},{"size":483,"mtime":1610893510640,"results":"34","hashOfConfig":"19"},{"size":128,"mtime":1610893510639,"results":"35","hashOfConfig":"19"},{"size":621,"mtime":1610900271664,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"wnkxlx",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"12rr1ny",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tahmed/Desktop/mastermind/mastermind/src/index.js",[],["78","79"],"/Users/tahmed/Desktop/mastermind/mastermind/src/App.js",["80","81"],"/Users/tahmed/Desktop/mastermind/mastermind/src/reportWebVitals.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/answers/answer.js",["82","83","84"],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/input/input.js",["85","86"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./input.css\";\nimport firebase from \"firebase\";\nimport * as Actions from '../../actions/userActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst CustomizedInputs = ({ actions }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = () => {\n    console.log(\"hamza: \" + value);\n    actions.getUserData(value);\n    /*  firebase\n      .database()\n      .ref(\"user\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n         console.log(data.val());\n        });\n      }); */\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Enter your key\"\n        defaultValue={value}\n        onChange={e => handleChange(e)}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n      >\n        submit\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (props) => ({\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tactions: bindActionCreators(Actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedInputs);\n","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/apikey.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/fetch/index.js",["87"],"import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\nconst FetchData = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  /*\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    firebase\n      .database()\n      .ref(\"registeredCar\")\n      .orderByChild(\"registeredBy\")\n      .equalTo(\"Hamza\")\n      .on(\"value\", snapshot => {\n        let isCarRegistered = false;\n        let car = \"\";\n        snapshot.forEach(function (data) {\n          car = data.child(\"car\").val();\n          if (car) {\n            getCarDetails(car);\n          }\n          if (data.child(\"isRegistered\").val()) {\n            isCarRegistered = true;\n          }\n        });\n        setDriving(isCarRegistered);\n      });\n  };\n  getCarDetails = car => {\n    firebase\n      .database()\n      .ref(\"rentCarsList\")\n      .orderByChild(\"name\")\n      .equalTo(car)\n      .on(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n          setCarDetails(data.val());\n        });\n      });\n  };\n  */\n\n  const getData = () => {\n    firebase\n      .database()\n      .ref(\"car\")\n      .once(\"value\")\n      .then(snapshot => {\n        snapshot.forEach(child => {\n          console.log(child.val());\n          setData([...data, child.val()]);\n        });\n      })\n      .catch(error => {});\n  };\n  console.log(data);\n  return (\n    <div>\n      <h1>Hello</h1>\n      {data.map(element => (\n        <div>{element.name}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default FetchData;\n","/Users/tahmed/Desktop/mastermind/mastermind/src/components/flexbox/index.js",[],["88","89"],"/Users/tahmed/Desktop/mastermind/mastermind/src/constants/dummyData.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/store/index.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/main/main.js",["90","91","92","93","94","95","96","97","98"],"/Users/tahmed/Desktop/mastermind/mastermind/src/reducers/index.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/register/register.js",["99","100"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./register.css\";\nimport firebase from \"firebase\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst Register = ({ isLoggedIn }) => {\n  const [value, setValue] = useState(\"\");\n  console.log(\"islogin: \" + isLoggedIn);\n  const handleSubmit = () => {\n    console.log(\"hamza: \" + value);\n    const randomString = Math.random().toString(36);\n    const date = new Date();\n    const randomNumber =  randomString+new Date(date).getTime();\n    const values = { \n      id: randomNumber,\n      name: value,\n      role: 'admin'\n    };\n    let carListRef = firebase.database().ref(\"user\");\n    let newCarRef = carListRef.push();\n    newCarRef\n      .set(values)\n      .then(resp => {\n        console.log(resp);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Enter your key\"\n        defaultValue={value}\n        onChange={e => handleChange(e)}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n      >\n        submit\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (props) => ({\n\tisLoggedIn: props.userReducer.isLoggedIn,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\t//actions: bindActionCreators(Actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","/Users/tahmed/Desktop/mastermind/mastermind/src/actions/userActions.js",["101","102"],"import {\n  LOGIN_SUCCESS,\n  LOGUT_SUCCESS,\n  GET_USER\n} from \"../constants/action-types\";\nimport firebase from \"firebase\";\n\n export const getUserData = (value) => {\n  return (dispatch) => {\n    firebase\n      .database()\n      .ref(\"user\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n        snapshot.forEach(function (data) {\n         console.log(data.val());\n          localStorage.setItem(\"id\", data.child(\"id\").val());\n          dispatch({ type: LOGIN_SUCCESS, payload: data.val() });\n        });\n         }\n         else{\n           console.log(\"errorss show toast invalid ID\");\n         }\n       \n      });\n  }\n}\n","/Users/tahmed/Desktop/mastermind/mastermind/src/reducers/userReducer.js",["103"],"import { LOGIN_SUCCESS, LOGUT_SUCCESS, GET_USER } from \"../constants/action-types\";\n\nconst initialState = {\n  user: {},\n  isLoggedIn: false,\n};\n\nconst userReducer = (state = initialState, action) => {\n  if (action.type === LOGIN_SUCCESS) {\n    return  {\n      ...state,\n      user: action.payload,\n      isLoggedIn: true,\n    };\n  }\n  if(action.type === LOGUT_SUCCESS) {\n    return {\n      ...state,\n      isLoggedIn: false,\n    }\n  } \n  return state;\n}\n\nexport default userReducer;\n","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/action-types.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/countdownwrapper/index.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":15},{"ruleId":"108","severity":1,"message":"112","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":18},{"ruleId":"108","severity":1,"message":"113","line":9,"column":25,"nodeType":"110","messageId":"111","endLine":9,"endColumn":41},{"ruleId":"108","severity":1,"message":"114","line":25,"column":11,"nodeType":"110","messageId":"111","endLine":25,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":25,"column":43,"nodeType":"117","messageId":"118","endLine":25,"endColumn":45},{"ruleId":"108","severity":1,"message":"119","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"120","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":9,"column":6,"nodeType":"123","endLine":9,"endColumn":8,"suggestions":"124"},{"ruleId":"104","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"127","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"128","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"129","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"130","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"108","severity":1,"message":"120","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"108","severity":1,"message":"131","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":17},{"ruleId":"108","severity":1,"message":"132","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":16},{"ruleId":"121","severity":1,"message":"133","line":22,"column":6,"nodeType":"123","endLine":22,"endColumn":8,"suggestions":"134"},{"ruleId":"108","severity":1,"message":"119","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"135","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":28},{"ruleId":"108","severity":1,"message":"136","line":3,"column":3,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"137","line":4,"column":3,"nodeType":"110","messageId":"111","endLine":4,"endColumn":11},{"ruleId":"108","severity":1,"message":"137","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":48},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Answers' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setCorrectAnswer' is assigned a value but never used.","'answer' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'firebase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["140"],["138"],["139"],"'fade' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'FetchData' is defined but never used.","'Register' is defined but never used.","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.",["141"],"'bindActionCreators' is defined but never used.","'LOGUT_SUCCESS' is defined but never used.","'GET_USER' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [getData]",{"range":"146","text":"147"},"Update the dependencies array to be: [actions]",{"range":"148","text":"149"},[193,195],"[getData]",[874,876],"[actions]"]