[{"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/index.js":"1","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/App.js":"2","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reportWebVitals.js":"3","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/store/index.js":"4","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/apikey.js":"5","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/main/main.js":"6","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/answers/answer.js":"7","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/index.js":"8","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyData.js":"9","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/userReducer.js":"10","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/fetch/index.js":"11","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/actions/userActions.js":"12","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/countdownwrapper/index.js":"13","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/register/register.js":"14","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/input/input.js":"15","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/action-types.js":"16","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/loading/index.js":"17"},{"size":620,"mtime":1610893510640,"results":"18","hashOfConfig":"19"},{"size":623,"mtime":1610982662655,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610731866693,"results":"21","hashOfConfig":"19"},{"size":332,"mtime":1610893510641,"results":"22","hashOfConfig":"19"},{"size":482,"mtime":1610803753123,"results":"23","hashOfConfig":"19"},{"size":392,"mtime":1610982160787,"results":"24","hashOfConfig":"19"},{"size":3719,"mtime":1610900306338,"results":"25","hashOfConfig":"19"},{"size":181,"mtime":1610893510640,"results":"26","hashOfConfig":"19"},{"size":2902,"mtime":1610893498809,"results":"27","hashOfConfig":"19"},{"size":483,"mtime":1610893510640,"results":"28","hashOfConfig":"19"},{"size":1549,"mtime":1610805740471,"results":"29","hashOfConfig":"19"},{"size":689,"mtime":1610893510638,"results":"30","hashOfConfig":"19"},{"size":621,"mtime":1610900271664,"results":"31","hashOfConfig":"19"},{"size":2428,"mtime":1610893510639,"results":"32","hashOfConfig":"19"},{"size":2271,"mtime":1610893510638,"results":"33","hashOfConfig":"19"},{"size":128,"mtime":1610893510639,"results":"34","hashOfConfig":"19"},{"size":1275,"mtime":1610982598170,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hf6i4y",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/App.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reportWebVitals.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/store/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/apikey.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/main/main.js",[],["74","75"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/answers/answer.js",["76","77","78"],"import React, { useState, useEffect } from \"react\";\nimport \"./answer.css\";\nimport CountDownWrapper from \"../countdownwrapper/index\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { data } from \"../../constants/dummyData\";\n\nconst Answers = () => {\n  const [correctAnswer, setCorrectAnswer] = useState(\"B\");\n  const [timer, setTimer] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const [\n    { answerColor1, answerColor2, answerColor3, answerColor4 },\n    setAnswerColor\n  ] = useState([\n    {\n      answerColor1: \"purple\",\n      answerColor2: \"purple\",\n      answerColor3: \"purple\",\n      answerColor4: \"purple\"\n    }\n  ]);\n  useEffect(() => {\n    console.log(data.question[0].description);\n    const answer = data.question.filter(e => {\n      e.answer.filter(e => e.isTrue === true);\n    });\n\n    //if(answer)\n  }, []);\n\n  const colorChange1 = () => {\n    setAnswerColor({ answerColor1: \"grey\" });\n  };\n  const colorChange2 = () => {\n    //selectAnswer2(true);\n    setAnswerColor({ answerColor2: \"grey\" });\n  };\n  const colorChange3 = () => {\n    // selectAnswer3(true);\n    setAnswerColor({ answerColor3: \"grey\" });\n  };\n  const colorChange4 = () => {\n    // selectAnswer4(true);\n    setAnswerColor({ answerColor4: \"grey\" });\n  };\n\n  const onCompleteTimer = () => {\n    if (correctAnswer === \"A\") {\n      setAnswerColor({ answerColor1: \"green\" });\n    } else if (correctAnswer === \"B\") {\n      setAnswerColor({ answerColor2: \"green\" });\n    } else if (correctAnswer === \"C\") {\n      setAnswerColor({ answerColor3: \"green\" });\n    } else {\n      setAnswerColor({ answerColor4: \"green\" });\n    }\n  };\n\n  return (\n    <div>\n      <Card align=\"center\" className=\"parent_answer_container\">\n        <h1 className=\" \" align=\"center\">\n          Islamic Quiz\n        </h1>\n        <div className=\"timer\" align=\"center\">\n          <CountDownWrapper onComplete={onCompleteTimer} timer={timer} />\n        </div>\n        <div align=\"center\" className=\"question\">\n          <p>{data.question[counter].description}</p>\n        </div>\n        <Card className=\"box_container\" border={1}>\n          <div align=\"center\" className=\"answer_container\">\n            <Button\n              onClick={colorChange1}\n              className={answerColor1}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {data.question[counter].answer[0].details}\n            </Button>\n            <Button\n              onClick={colorChange2}\n              className={answerColor2}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {data.question[counter].answer[1].details}\n            </Button>\n          </div>\n          <div className=\"answer_container\">\n            <Button\n              onClick={colorChange3}\n              className={answerColor3}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {data.question[counter].answer[2].details}\n            </Button>\n            <Button\n              onClick={colorChange4}\n              className={answerColor4}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {data.question[counter].answer[3].details}\n            </Button>\n          </div>\n        </Card>\n        <Button\n          onClick={() => {\n            setTimer(timer + 1);\n            counter < data.question.length\n              ? setCounter(counter + 1)\n              : setCounter(counter - 1);\n          }}\n          className=\"admin_button\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Next Question\n        </Button>\n      </Card>\n    </div>\n  );\n};\nexport default Answers;\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyData.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/userReducer.js",["79"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/fetch/index.js",["80"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/actions/userActions.js",["81","82"],"import {\n  LOGIN_SUCCESS,\n  LOGUT_SUCCESS,\n  GET_USER\n} from \"../constants/action-types\";\nimport firebase from \"firebase\";\n\n export const getUserData = (value) => {\n  return (dispatch) => {\n    firebase\n      .database()\n      .ref(\"user\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n        snapshot.forEach(function (data) {\n         console.log(data.val());\n          localStorage.setItem(\"id\", data.child(\"id\").val());\n          dispatch({ type: LOGIN_SUCCESS, payload: data.val() });\n        });\n         }\n         else{\n           console.log(\"errorss show toast invalid ID\");\n         }\n       \n      });\n  }\n}\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/countdownwrapper/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/register/register.js",["83","84"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/input/input.js",["85","86"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./input.css\";\nimport firebase from \"firebase\";\nimport * as Actions from '../../actions/userActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst CustomizedInputs = ({ actions }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = () => {\n    console.log(\"hamza: \" + value);\n    actions.getUserData(value);\n    /*  firebase\n      .database()\n      .ref(\"user\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n         console.log(data.val());\n        });\n      }); */\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Enter your key\"\n        defaultValue={value}\n        onChange={e => handleChange(e)}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n      >\n        submit\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (props) => ({\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tactions: bindActionCreators(Actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedInputs);\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/action-types.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/loading/index.js",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":25,"nodeType":"94","messageId":"95","endLine":9,"endColumn":41},{"ruleId":"92","severity":1,"message":"96","line":25,"column":11,"nodeType":"94","messageId":"95","endLine":25,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":25,"column":43,"nodeType":"99","messageId":"100","endLine":25,"endColumn":45},{"ruleId":"92","severity":1,"message":"101","line":1,"column":40,"nodeType":"94","messageId":"95","endLine":1,"endColumn":48},{"ruleId":"102","severity":1,"message":"103","line":9,"column":6,"nodeType":"104","endLine":9,"endColumn":8,"suggestions":"105"},{"ruleId":"92","severity":1,"message":"106","line":3,"column":3,"nodeType":"94","messageId":"95","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"101","line":4,"column":3,"nodeType":"94","messageId":"95","endLine":4,"endColumn":11},{"ruleId":"92","severity":1,"message":"107","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"108","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":28},{"ruleId":"92","severity":1,"message":"107","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"109","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":16},{"ruleId":"102","severity":1,"message":"110","line":20,"column":6,"nodeType":"104","endLine":20,"endColumn":8,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'setCorrectAnswer' is assigned a value but never used.","Identifier","unusedVar","'answer' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'GET_USER' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'LOGUT_SUCCESS' is defined but never used.","'useEffect' is defined but never used.","'bindActionCreators' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [getData]",{"range":"120","text":"121"},"Update the dependencies array to be: [actions]",{"range":"122","text":"123"},[193,195],"[getData]",[706,708],"[actions]"]