[{"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\index.js":"1","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\App.js":"2","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\store\\index.js":"3","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reportWebVitals.js":"4","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\apikey.js":"5","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\index.js":"6","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\main\\main.js":"7","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\userReducer.js":"8","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\register\\register.js":"9","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\fetch\\index.js":"10","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\answers\\answer.js":"11","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\input\\input.js":"12","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\action-types.js":"13","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\actions\\userActions.js":"14","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\dummyData.js":"15","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\countdownwrapper\\index.js":"16","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\loading\\index.js":"17","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\result\\index.js":"18"},{"size":641,"mtime":1610825565907,"results":"19","hashOfConfig":"20"},{"size":906,"mtime":1611080350236,"results":"21","hashOfConfig":"20"},{"size":349,"mtime":1604427301320,"results":"22","hashOfConfig":"20"},{"size":375,"mtime":1610802122709,"results":"23","hashOfConfig":"20"},{"size":493,"mtime":1610806085766,"results":"24","hashOfConfig":"20"},{"size":189,"mtime":1610824589113,"results":"25","hashOfConfig":"20"},{"size":767,"mtime":1611080350390,"results":"26","hashOfConfig":"20"},{"size":811,"mtime":1611082018844,"results":"27","hashOfConfig":"20"},{"size":2476,"mtime":1610996021879,"results":"28","hashOfConfig":"20"},{"size":1624,"mtime":1610806085764,"results":"29","hashOfConfig":"20"},{"size":4023,"mtime":1611080350383,"results":"30","hashOfConfig":"20"},{"size":3120,"mtime":1611082825449,"results":"31","hashOfConfig":"20"},{"size":214,"mtime":1611081952565,"results":"32","hashOfConfig":"20"},{"size":2397,"mtime":1611084128340,"results":"33","hashOfConfig":"20"},{"size":3015,"mtime":1611080350461,"results":"34","hashOfConfig":"20"},{"size":646,"mtime":1611080350385,"results":"35","hashOfConfig":"20"},{"size":1419,"mtime":1611084189984,"results":"36","hashOfConfig":"20"},{"size":1705,"mtime":1611080350456,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"3tjxz7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\index.js",[],["80","81"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\App.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\store\\index.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reportWebVitals.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\apikey.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\index.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\main\\main.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\userReducer.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\register\\register.js",["82","83","84"],"import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./register.css\";\r\nimport firebase from \"firebase\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst Register = ({ isLoggedIn }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  console.log(\"islogin: \" + isLoggedIn);\r\n  const handleSubmit = () => {\r\n    console.log(\"hamza: \" + value);\r\n    const randomString = Math.random().toString(36);\r\n    const date = new Date();\r\n    const randomNumber =  randomString+new Date(date).getTime();\r\n    const values = { \r\n      id: randomNumber,\r\n      name: value,\r\n      role: 'admin'\r\n    };\r\n    let carListRef = firebase.database().ref(\"user\");\r\n    let newCarRef = carListRef.push();\r\n    newCarRef\r\n      .set(values)\r\n      .then(resp => {\r\n        console.log(resp);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"input_container\" align=\"center\">\r\n      <RedditTextField\r\n        label=\"Enter your key\"\r\n        defaultValue={value}\r\n        onChange={e => handleChange(e)}\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        variant=\"contained\"\r\n        className=\"submitButton\"\r\n      >\r\n        submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (props) => ({\r\n\tisLoggedIn: props.userReducer.isLoggedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\t//actions: bindActionCreators(Actions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n",["85","86"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\fetch\\index.js",["87"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nconst FetchData = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"registeredCar\")\r\n      .orderByChild(\"registeredBy\")\r\n      .equalTo(\"Hamza\")\r\n      .on(\"value\", snapshot => {\r\n        let isCarRegistered = false;\r\n        let car = \"\";\r\n        snapshot.forEach(function (data) {\r\n          car = data.child(\"car\").val();\r\n          if (car) {\r\n            getCarDetails(car);\r\n          }\r\n          if (data.child(\"isRegistered\").val()) {\r\n            isCarRegistered = true;\r\n          }\r\n        });\r\n        setDriving(isCarRegistered);\r\n      });\r\n  };\r\n  getCarDetails = car => {\r\n    firebase\r\n      .database()\r\n      .ref(\"rentCarsList\")\r\n      .orderByChild(\"name\")\r\n      .equalTo(car)\r\n      .on(\"value\", snapshot => {\r\n        snapshot.forEach(function (data) {\r\n          setCarDetails(data.val());\r\n        });\r\n      });\r\n  };\r\n  */\r\n\r\n  const getData = () => {\r\n    firebase\r\n      .database()\r\n      .ref(\"car\")\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        snapshot.forEach(child => {\r\n          console.log(child.val());\r\n          setData([...data, child.val()]);\r\n        });\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <h1>Hello</h1>\r\n      {data.map(element => (\r\n        <div>{element.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchData;\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\answers\\answer.js",["88","89","90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./answer.css\";\r\nimport CountDownWrapper from \"../countdownwrapper/index\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { data } from \"../../constants/dummyData\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Answers = ({ isAdmin, user, appState }) => {\r\n  console.log(appState, \"counter\");\r\n  const [correctAnswer, setCorrectAnswer] = useState(\"B\");\r\n  const [timer, setTimer] = useState(0);\r\n  const [counter, setCounter] = useState(0);\r\n  const [\r\n    { answerColor1, answerColor2, answerColor3, answerColor4 },\r\n    setAnswerColor\r\n  ] = useState([\r\n    {\r\n      answerColor1: \"purple\",\r\n      answerColor2: \"purple\",\r\n      answerColor3: \"purple\",\r\n      answerColor4: \"purple\"\r\n    }\r\n  ]);\r\n  useEffect(() => {\r\n    console.log(data.question[0].description);\r\n    const answer = data.question.filter(e => {\r\n      e.answer.filter(e => e.isTrue === true);\r\n    });\r\n\r\n    //if(answer)\r\n  }, []);\r\n\r\n  const colorChange1 = () => {\r\n    setAnswerColor({ answerColor1: \"grey\" });\r\n  };\r\n  const colorChange2 = () => {\r\n    //selectAnswer2(true);\r\n    setAnswerColor({ answerColor2: \"grey\" });\r\n  };\r\n  const colorChange3 = () => {\r\n    // selectAnswer3(true);\r\n    setAnswerColor({ answerColor3: \"grey\" });\r\n  };\r\n  const colorChange4 = () => {\r\n    // selectAnswer4(true);\r\n    setAnswerColor({ answerColor4: \"grey\" });\r\n  };\r\n  const onClickNextQuestion = () => {\r\n    console.log(appState, \"counter\");\r\n    const counter = appState.state + 1;\r\n    firebase\r\n      .database()\r\n      .ref(\"appState\")\r\n      .orderByChild(\"state\")\r\n      .once(\"value\", snapshot => {\r\n        snapshot.forEach(function(data) {\r\n          data.ref.child(\"state\").set(counter);\r\n          setTimer(20);\r\n        });\r\n      });\r\n      \r\n  };\r\n  const onCompleteTimer = () => {\r\n    if (correctAnswer === \"A\") {\r\n      setAnswerColor({ answerColor1: \"green\" });\r\n    } else if (correctAnswer === \"B\") {\r\n      setAnswerColor({ answerColor2: \"green\" });\r\n    } else if (correctAnswer === \"C\") {\r\n      setAnswerColor({ answerColor3: \"green\" });\r\n    } else {\r\n      setAnswerColor({ answerColor4: \"green\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div align=\"center\" className=\"parent_answer_container\">\r\n        <h1 className=\" \" align=\"center\">\r\n          Islamic Quiz\r\n        </h1>\r\n        <div className=\"timer\" align=\"center\">\r\n          <CountDownWrapper onComplete={onCompleteTimer} timer={timer} />\r\n        </div>\r\n        <div align=\"center\" className=\"question\">\r\n          <p>{data.question[appState.state].description}</p>\r\n        </div>\r\n        <Card className=\"box_container\" border={1}>\r\n          <div align=\"center\" className=\"answer_container\">\r\n            <Button\r\n              onClick={colorChange1}\r\n              className={answerColor1}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {data.question[appState.state].answer[0].details}\r\n            </Button>\r\n            <Button\r\n              onClick={colorChange2}\r\n              className={answerColor2}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {data.question[appState.state].answer[1].details}\r\n            </Button>\r\n          </div>\r\n          <div className=\"answer_container\">\r\n            <Button\r\n              onClick={colorChange3}\r\n              className={answerColor3}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {data.question[appState.state].answer[2].details}\r\n            </Button>\r\n            <Button\r\n              onClick={colorChange4}\r\n              className={answerColor4}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {data.question[appState.state].answer[3].details}\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n        {isAdmin && (\r\n          <Button\r\n            onClick={onClickNextQuestion}\r\n            className=\"admin_button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Next Question\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Answers;\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\input\\input.js",["93","94","95","96","97"],"import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./input.css\";\r\nimport firebase from \"firebase\";\r\nimport * as Actions from \"../../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst CustomizedInputs = ({ actions, error, loginSuccess, user, isLoggedIn }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [errorValue, setErrorValue] = useState(\"Please Enter Value\");\r\n  const [errors, isError] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    if (value.length < 0) {\r\n      setErrorValue(\"Please Enter Value\");\r\n    } else {\r\n      actions.getUserData(value);\r\n      setErrorValue(\"Please Enter Value\");\r\n    }\r\n\r\n    isError(error);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const startQuiz = () =>{\r\n    \r\n    actions.startQuiz();\r\n  }\r\n  return (\r\n    <div className=\"input_container\" align=\"center\">\r\n    {\r\n      !loginSuccess && !isLoggedIn &&\r\n      <>\r\n      <RedditTextField\r\n        label=\"Enter your key\"\r\n        defaultValue={value}\r\n        onChange={e => handleChange(e)}\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        variant=\"contained\"\r\n        className=\"submitButton\"\r\n        disabled={!value}\r\n      >\r\n        submit\r\n      </Button>\r\n      </>\r\n    }\r\n    {\r\n      loginSuccess && !isLoggedIn &&  user.role == 'user' && \r\n      <>\r\n      <p>\r\n        Quiz will start soon\r\n      </p>\r\n      </>\r\n    }\r\n     {\r\n      loginSuccess && !isLoggedIn && user.role == 'admin' &&   \r\n      <>\r\n     <Button\r\n        onClick={startQuiz}\r\n        variant=\"contained\"\r\n        className=\"submitButton\"\r\n      >\r\n        Start Quiz\r\n      </Button>\r\n      </>\r\n    }\r\n     \r\n      {errors && <p style={{ color: \"red\" }}>Invalid User key</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = props => ({\r\n  loginSuccess: props.userReducer.loginSuccess,\r\n  isLoggedIn: props.userReducer.isLoggedIn,\r\n  user: props.userReducer.user,\r\n  error: props.userReducer.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedInputs);\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\action-types.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\actions\\userActions.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\dummyData.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\countdownwrapper\\index.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\loading\\index.js",["98"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\result\\index.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"107","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":28},{"ruleId":"103","severity":1,"message":"108","line":44,"column":11,"nodeType":"105","messageId":"106","endLine":44,"endColumn":23},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":9,"column":6,"nodeType":"113","endLine":9,"endColumn":8,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"115","line":11,"column":25,"nodeType":"105","messageId":"106","endLine":11,"endColumn":41},{"ruleId":"103","severity":1,"message":"116","line":13,"column":10,"nodeType":"105","messageId":"106","endLine":13,"endColumn":17},{"ruleId":"103","severity":1,"message":"117","line":13,"column":19,"nodeType":"105","messageId":"106","endLine":13,"endColumn":29},{"ruleId":"103","severity":1,"message":"118","line":27,"column":11,"nodeType":"105","messageId":"106","endLine":27,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":27,"column":43,"nodeType":"121","messageId":"122","endLine":27,"endColumn":45},{"ruleId":"103","severity":1,"message":"104","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"123","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":16},{"ruleId":"103","severity":1,"message":"124","line":40,"column":10,"nodeType":"105","messageId":"106","endLine":40,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":85,"column":49,"nodeType":"127","messageId":"128","endLine":85,"endColumn":51},{"ruleId":"125","severity":1,"message":"126","line":93,"column":48,"nodeType":"127","messageId":"128","endLine":93,"endColumn":50},{"ruleId":"111","severity":1,"message":"129","line":21,"column":6,"nodeType":"113","endLine":21,"endColumn":8,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'bindActionCreators' is defined but never used.","'randomNumber' is assigned a value but never used.",["131"],["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'setCorrectAnswer' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'answer' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'firebase' is defined but never used.","'errorValue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [getData]",{"range":"139","text":"140"},"Update the dependencies array to be: [actions]",{"range":"141","text":"142"},[201,203],"[getData]",[692,694],"[actions]"]