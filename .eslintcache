[{"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/index.js":"1","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reportWebVitals.js":"2","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/App.js":"3","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/store/index.js":"4","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/apikey.js":"5","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/index.js":"6","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/loading/index.js":"7","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/result/index.js":"8","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/userReducer.js":"9","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/actions/userActions.js":"10","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/main/main.js":"11","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/action-types.js":"12","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/register/register.js":"13","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/answers/answer.js":"14","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyData.js":"15","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/countdownwrapper/index.js":"16","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/input/index.js":"17","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/islamic/data.js":"18","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/gk/data.js":"19","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/nawait/data.js":"20","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/iq/data.js":"21"},{"size":620,"mtime":1611159305589,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1610731866693,"results":"24","hashOfConfig":"23"},{"size":1319,"mtime":1611702287884,"results":"25","hashOfConfig":"23"},{"size":332,"mtime":1611159305592,"results":"26","hashOfConfig":"23"},{"size":482,"mtime":1610803753123,"results":"27","hashOfConfig":"23"},{"size":181,"mtime":1611159305590,"results":"28","hashOfConfig":"23"},{"size":1644,"mtime":1611699019691,"results":"29","hashOfConfig":"23"},{"size":2944,"mtime":1611755572160,"results":"30","hashOfConfig":"23"},{"size":1009,"mtime":1611507951152,"results":"31","hashOfConfig":"23"},{"size":4089,"mtime":1611507951132,"results":"32","hashOfConfig":"23"},{"size":1370,"mtime":1611703656341,"results":"33","hashOfConfig":"23"},{"size":306,"mtime":1611507951148,"results":"34","hashOfConfig":"23"},{"size":3209,"mtime":1611507951145,"results":"35","hashOfConfig":"23"},{"size":7375,"mtime":1611775858170,"results":"36","hashOfConfig":"23"},{"size":33452,"mtime":1611775804871,"results":"37","hashOfConfig":"23"},{"size":594,"mtime":1611699775749,"results":"38","hashOfConfig":"23"},{"size":3373,"mtime":1611663813911,"results":"39","hashOfConfig":"23"},{"size":10274,"mtime":1611774855577,"results":"40","hashOfConfig":"23"},{"size":8167,"mtime":1611775220443,"results":"41","hashOfConfig":"23"},{"size":7229,"mtime":1611774845693,"results":"42","hashOfConfig":"23"},{"size":8685,"mtime":1611774837425,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hf6i4y",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/index.js",[],["94","95"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reportWebVitals.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/App.js",["96","97"],"import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Loading from \"./components/loading/index\";\nimport { firebaseConfig } from \"./constants/apikey.js\";\nimport firebase from \"firebase/app\";\nimport Card from \"@material-ui/core/Card\";\nimport Result from \"./components/result/index\";\nimport logo from \"./assets/logo.png\";\nimport bgWhite from \"./assets/bgWhite.png\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n  }\n\n  render() {\n    return (\n      <div align=\"center\" className=\"App\">\n        <Card variant=\"outlined\" className=\"parent_answer_container\">\n          <div className=\"logo_text_container\">\n            <img className=\"logo_image\" src={logo} alt=\"logo\" />\n            <span className=\"text_heading\">\n              <span className=\"text_heading_sub\">Presents</span>\n              <br />\n              <span className=\"text_heading_sub_main\">NAWAIT MASTERMIND</span>\n            </span>\n            <span className=\"text_heading_cor\">\n              Mursaleen\n              <br /> Mehmood\n            </span>\n          </div>\n          <Loading />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/store/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/apikey.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/loading/index.js",["98"],"import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Main from \"../main/main\";\nimport * as Actions from \"../../actions/userActions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({ isLoggedIn, actions, user, appState, userResult }) => {\n  const [Loadingg, isLoadingg] = useState(false);\n\n  useEffect(() => {\n    actions.getAppState();\n    if (localStorage.getItem(\"id\")) {\n      actions.getLoginState();\n      actions.getUserResult(localStorage.getItem(\"id\"));\n      actions.getUserData(localStorage.getItem(\"id\"));\n    }\n    setTimeout(function() {\n      isLoadingg(true);\n    }, 1000);\n  }, []);\n  return (\n    <div>\n      {!Loadingg ? (\n        <div className=\"progress_bar\" align=\"center\">\n          <CircularProgress\n            style={{ color: \"#1A4173\" }}\n            className=\"progress_barColor\"\n            color=\"primary\"\n          />\n        </div>\n      ) : (\n        <div className=\"progress_bar\" align=\"center\">\n          <Main\n            userResult={userResult}\n            appState={appState}\n            user={user}\n            isLoggedIn={isLoggedIn}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n  userResult: props.userReducer.userResult,\n  appState: props.userReducer.appState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/result/index.js",["99","100","101","102"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/userReducer.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/actions/userActions.js",["103"],"import {\n  LOGIN_SUCCESS,\n  GET_APP_STATE,\n  LOGIN_FAILED,\n  START_QUIZ,\n  USER_RESULT,\n  USER_RESULT_FAILED\n} from \"../constants/action-types\";\nimport firebase from \"firebase\";\n\nexport const getUserData = value => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            console.log(data.child(\"login\").val(), \"Error: passed snapsot\");\n\n            if (\n              data.child(\"login\").val() &&\n              !localStorage.getItem(\"id\") &&\n              data\n                .child(\"role\")\n                .val()\n                .toLowerCase() == \"user\"\n            ) {\n              console.log(\"Error: already login failed\");\n              dispatch({\n                type: LOGIN_FAILED,\n                payload: \"User is already login to another device\"\n              });\n            } else {\n              console.log(\"login sucess\", data.val());\n              data.ref.child(\"login\").set(true);\n              localStorage.setItem(\"id\", data.child(\"id\").val());\n              dispatch({ type: LOGIN_SUCCESS, payload: data.val() });\n            }\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: LOGIN_FAILED, payload: \"Invalid User key\" });\n        }\n      });\n  };\n};\n\nexport const getAppState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            console.log(data.val(), \"awssssawssssawssss\");\n            dispatch({ type: GET_APP_STATE, payload: data.val() });\n          });\n        } else {\n          console.log(\"asdasxzczxc show toast invalid ID\");\n        }\n      });\n  };\n};\n\nexport const getLoginState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            const dataValue = data.val();\n            if (dataValue.state) {\n              dispatch({ type: START_QUIZ, payload: \"\" });\n            }\n          });\n        } else {\n          console.log(\"abcdasad\");\n        }\n      });\n  };\n};\n\nexport const startQuiz = () => {\n  console.log(START_QUIZ, \"START_QUIZSTART_QUIZ\");\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .orderByChild(\"state\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(\"state\").set(true);\n          dispatch({ type: START_QUIZ, payload: \"\" });\n        });\n      });\n  };\n};\n\nexport const getUserResult = value => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function(data) {\n            console.log(data.val(), \"user ersuultss\");\n            dispatch({ type: USER_RESULT, payload: data.val() });\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n\nexport const storeAnswer = (obj, value) => {\n  console.log(obj, \"poo\", value);\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function(data) {\n            console.log(\"Error: passed\", data.val());\n            data.ref.child(\"score\").set(obj.score);\n            data.ref.child(\"totalCorrectAnswers\").set(obj.totalCorrectAnswers);\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/main/main.js",["104"],"import React from \"react\";\nimport \"./main.css\";\nimport Answers from \"../answers/answer\";\nimport CustomizedInputs from \"../input/index\";\nimport Register from \"../register/register\";\nimport Result from \"../result/index\";\n\nconst Main = ({ isLoggedIn, user, appState, userResult, error }) => {\n  return (\n    // <div>\n    //   <Register />\n    // </div>\n    <div>\n      {!isLoggedIn ? (\n        <CustomizedInputs />\n      ) : (\n        <div>\n          <div className=\"main_container\">\n            <span className=\"main_username\">{user.name}</span>\n            <span className=\"main_category\">ISLAMIC</span>\n            <div className=\"main_results_container\">\n              <span align=\"left\" className=\"main_score\">\n                Score: 0\n              </span>\n\n              <span align=\"left\" className=\"main_rank\">\n                Rank: 0\n              </span>\n            </div>\n          </div>\n\n          <div className=\"quiz_component\">\n            <div className=\"answers\">\n              <Answers\n                appState={appState}\n                isAdmin={user.role === \"admin\" ? true : false}\n                user={user}\n                userResult={userResult}\n              />\n            </div>\n            <div className=\"result\">\n              <Result />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/action-types.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/register/register.js",["105","106"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./register.css\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst Register = ({ isLoggedIn }) => {\n  const [user, setUser] = useState({\n    name: \"\",\n    familyName: \"\",\n    id: \"\",\n    role: \"admin\"\n  });\n  const handleSubmit = () => {\n    console.log(user, \"userss\");\n    let userRef = firebase.database().ref(\"users\");\n    let newUserRef = userRef.push();\n    newUserRef\n      .set(user)\n      .then(resp => {\n        console.log(resp);\n        const result = {\n          id: user.id,\n          name: user.name + \" \" + user.familyName,\n          score: 0,\n          totalCorrectAnswers: 0,\n          rank: 0\n        };\n        let userResultRef = firebase.database().ref(\"userResults\");\n        let userResults = userResultRef.push();\n        userResults\n          .set(result)\n          .then(resp => {\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleChange = (val, field) => {\n    setUser({\n      ...user,\n      [field]: val\n    });\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Name\"\n        defaultValue={user.name}\n        onChange={e => handleChange(e.target.value, \"name\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <RedditTextField\n        label=\"Family Name\"\n        defaultValue={user.familyName}\n        onChange={e => handleChange(e.target.value, \"familyName\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n\n      <RedditTextField\n        label=\"ID\"\n        defaultValue={user.id}\n        onChange={e => handleChange(e.target.value, \"id\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n        disabled={!user.name || !user.id || !user.familyName}\n      >\n        submit\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  isLoggedIn: props.userReducer.isLoggedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //actions: bindActionCreators(Actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/answers/answer.js",["107","108","109","110"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyData.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/countdownwrapper/index.js",["111","112"],"import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst CountDownWrapper = props => {\n  let seconds = 20;\n  let counter = 100;\n\n  console.log(props.duration, \"hamza: timer -> \" + props.timer);\n  return (\n    <div>\n      <CountdownCircleTimer\n        onComplete={props.onComplete}\n        children={props.children}\n        key={props.timer}\n        isPlaying\n        duration={props.duration}\n        size={100}\n        strokeWidth={4}\n        trailColor=\"#fff\"\n        colors=\"#000000\"\n      />\n    </div>\n  );\n};\nexport default CountDownWrapper;\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/input/index.js",["113","114","115"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./index.css\";\nimport firebase from \"firebase\";\nimport * as Actions from \"../../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst CustomizedInputs = ({\n  actions,\n  error,\n  loginSuccess,\n  user,\n  isLoggedIn,\n  errorMessage\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [errorValue, setErrorValue] = useState(\"Please Enter Value\");\n  const [errors, isError] = useState(false);\n\n  useEffect(() => {\n    if (loginSuccess) {\n      actions.getLoginState();\n      actions.getUserResult(localStorage.getItem(\"id\"));\n    }\n  }, [user]);\n\n  useEffect(() => {\n    isError(error);\n  }, [error]);\n\n  const handleSubmit = () => {\n    actions.getUserData(value);\n    console.log(\"Error: \" + error);\n    if (error) {\n      setErrorValue(\"Please Enter Value\");\n      isError(error);\n    }\n  };\n\n  const handleChange = e => {\n    isError(false);\n    setValue(e.target.value);\n  };\n\n  const startQuiz = () => {\n    actions.startQuiz();\n  };\n  return (\n    <div className=\"input_container\" align=\"center\">\n      {!loginSuccess && !isLoggedIn && (\n        <>\n          <RedditTextField\n            label=\"Enter your key\"\n            defaultValue={value}\n            onChange={e => handleChange(e)}\n            variant=\"filled\"\n            id=\"reddit-input\"\n          />\n          <Button\n            onClick={handleSubmit}\n            variant=\"contained\"\n            className=\"submitButton\"\n            disabled={!value}\n          >\n            submit\n          </Button>\n        </>\n      )}\n      {loginSuccess && !isLoggedIn && user.role === \"user\" && (\n        <>\n          <p className=\"quiz_start_text\">Quiz will start soon</p>\n        </>\n      )}\n      {loginSuccess && !isLoggedIn && user.role === \"admin\" && (\n        <>\n          <Button\n            onClick={startQuiz}\n            variant=\"contained\"\n            className=\"submitButton\"\n          >\n            Start Quiz\n          </Button>\n        </>\n      )}\n\n      {errors && <p style={{ color: \"red\" }}>{errorMessage}</p>}\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  loginSuccess: props.userReducer.loginSuccess,\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n  error: props.userReducer.error,\n  errorMessage: props.userReducer.errorMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedInputs);\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/islamic/data.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/gk/data.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/nawait/data.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/iq/data.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":22,"column":6,"nodeType":"127","endLine":22,"endColumn":8,"suggestions":"128"},{"ruleId":"120","severity":1,"message":"129","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":13},{"ruleId":"120","severity":1,"message":"130","line":19,"column":7,"nodeType":"122","messageId":"123","endLine":19,"endColumn":11},{"ruleId":"120","severity":1,"message":"131","line":28,"column":9,"nodeType":"122","messageId":"123","endLine":28,"endColumn":16},{"ruleId":"125","severity":1,"message":"132","line":53,"column":6,"nodeType":"127","endLine":53,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":30,"column":32,"nodeType":"136","messageId":"137","endLine":30,"endColumn":34},{"ruleId":"120","severity":1,"message":"138","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":16},{"ruleId":"120","severity":1,"message":"139","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"140","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":37,"column":19,"nodeType":"136","messageId":"137","endLine":37,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":37,"column":58,"nodeType":"136","messageId":"137","endLine":37,"endColumn":60},{"ruleId":"125","severity":1,"message":"141","line":92,"column":6,"nodeType":"127","endLine":92,"endColumn":22,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"141","line":128,"column":6,"nodeType":"127","endLine":128,"endColumn":8,"suggestions":"143"},{"ruleId":"120","severity":1,"message":"144","line":5,"column":7,"nodeType":"122","messageId":"123","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"145","line":6,"column":7,"nodeType":"122","messageId":"123","endLine":6,"endColumn":14},{"ruleId":"120","severity":1,"message":"146","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},{"ruleId":"120","severity":1,"message":"147","line":47,"column":10,"nodeType":"122","messageId":"123","endLine":47,"endColumn":20},{"ruleId":"125","severity":1,"message":"148","line":55,"column":6,"nodeType":"127","endLine":55,"endColumn":12,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Result' is defined but never used.","Identifier","unusedVar","'bgWhite' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'Paper' is defined but never used.","'rows' is assigned a value but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'datas'. Either include it or remove the dependency array.",["153"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Register' is defined but never used.","'useEffect' is defined but never used.","'bindActionCreators' is defined but never used.","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.",["154"],["155"],"'seconds' is assigned a value but never used.","'counter' is assigned a value but never used.","'firebase' is defined but never used.","'errorValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions' and 'loginSuccess'. Either include them or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [actions]",{"range":"167","text":"168"},"Update the dependencies array to be: [datas]",{"range":"169","text":"170"},"Update the dependencies array to be: [appState, appState.state]",{"range":"171","text":"172"},"Update the dependencies array to be: [appState]",{"range":"173","text":"174"},"Update the dependencies array to be: [actions, loginSuccess, user]",{"range":"175","text":"176"},[743,745],"[actions]",[1505,1507],"[datas]",[2906,2922],"[appState, appState.state]",[3840,3842],"[appState]",[1479,1485],"[actions, loginSuccess, user]"]