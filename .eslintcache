[{"/Users/tahmed/Desktop/mastermind/mastermind/src/index.js":"1","/Users/tahmed/Desktop/mastermind/mastermind/src/App.js":"2","/Users/tahmed/Desktop/mastermind/mastermind/src/reportWebVitals.js":"3","/Users/tahmed/Desktop/mastermind/mastermind/src/components/answers/answer.js":"4","/Users/tahmed/Desktop/mastermind/mastermind/src/components/input/input.js":"5","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/apikey.js":"6","/Users/tahmed/Desktop/mastermind/mastermind/src/components/fetch/index.js":"7","/Users/tahmed/Desktop/mastermind/mastermind/src/components/flexbox/index.js":"8","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/dummyData.js":"9"},{"size":500,"mtime":1610731866691,"results":"10","hashOfConfig":"11"},{"size":889,"mtime":1610878611835,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610731866693,"results":"13","hashOfConfig":"11"},{"size":4071,"mtime":1610890892444,"results":"14","hashOfConfig":"11"},{"size":1846,"mtime":1610805742186,"results":"15","hashOfConfig":"11"},{"size":482,"mtime":1610803753123,"results":"16","hashOfConfig":"11"},{"size":1549,"mtime":1610805740471,"results":"17","hashOfConfig":"11"},{"size":531,"mtime":1610808419036,"results":"18","hashOfConfig":"11"},{"size":2902,"mtime":1610891103200,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12rr1ny",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tahmed/Desktop/mastermind/mastermind/src/index.js",[],["41","42"],"/Users/tahmed/Desktop/mastermind/mastermind/src/App.js",["43","44","45","46"],"/Users/tahmed/Desktop/mastermind/mastermind/src/reportWebVitals.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/answers/answer.js",["47","48","49"],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/input/input.js",["50"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./input.css\";\nimport firebase from \"firebase\";\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nexport default function CustomizedInputs() {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = () => {\n    console.log(\"hamza: \" + value);\n    const values = { name: value };\n    let carListRef = firebase.database().ref(\"car\");\n    let newCarRef = carListRef.push();\n    newCarRef\n      .set(values)\n      .then(resp => {\n        console.log(resp);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Enter your key\"\n        defaultValue={value}\n        onChange={e => handleChange(e)}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n      >\n        submit\n      </Button>\n    </div>\n  );\n}\n","/Users/tahmed/Desktop/mastermind/mastermind/src/constants/apikey.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/components/fetch/index.js",["51"],"import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\nconst FetchData = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  /*\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    firebase\n      .database()\n      .ref(\"registeredCar\")\n      .orderByChild(\"registeredBy\")\n      .equalTo(\"Hamza\")\n      .on(\"value\", snapshot => {\n        let isCarRegistered = false;\n        let car = \"\";\n        snapshot.forEach(function (data) {\n          car = data.child(\"car\").val();\n          if (car) {\n            getCarDetails(car);\n          }\n          if (data.child(\"isRegistered\").val()) {\n            isCarRegistered = true;\n          }\n        });\n        setDriving(isCarRegistered);\n      });\n  };\n  getCarDetails = car => {\n    firebase\n      .database()\n      .ref(\"rentCarsList\")\n      .orderByChild(\"name\")\n      .equalTo(car)\n      .on(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n          setCarDetails(data.val());\n        });\n      });\n  };\n  */\n\n  const getData = () => {\n    firebase\n      .database()\n      .ref(\"car\")\n      .once(\"value\")\n      .then(snapshot => {\n        snapshot.forEach(child => {\n          console.log(child.val());\n          setData([...data, child.val()]);\n        });\n      })\n      .catch(error => {});\n  };\n  console.log(data);\n  return (\n    <div>\n      <h1>Hello</h1>\n      {data.map(element => (\n        <div>{element.name}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default FetchData;\n","/Users/tahmed/Desktop/mastermind/mastermind/src/components/flexbox/index.js",[],"/Users/tahmed/Desktop/mastermind/mastermind/src/constants/dummyData.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":24},{"ruleId":"56","severity":1,"message":"60","line":5,"column":10,"nodeType":"58","messageId":"59","endLine":5,"endColumn":18},{"ruleId":"56","severity":1,"message":"61","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":17},{"ruleId":"56","severity":1,"message":"62","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":15},{"ruleId":"56","severity":1,"message":"63","line":9,"column":25,"nodeType":"58","messageId":"59","endLine":9,"endColumn":41},{"ruleId":"56","severity":1,"message":"64","line":24,"column":11,"nodeType":"58","messageId":"59","endLine":24,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":24,"column":43,"nodeType":"67","messageId":"68","endLine":24,"endColumn":45},{"ruleId":"56","severity":1,"message":"69","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":9,"column":6,"nodeType":"72","endLine":9,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'CustomizedInputs' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'FetchData' is defined but never used.","'FlexBox' is defined but never used.","'setCorrectAnswer' is assigned a value but never used.","'answer' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [getData]",{"range":"79","text":"80"},[193,195],"[getData]"]