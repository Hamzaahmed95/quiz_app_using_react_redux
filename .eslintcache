[{"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\index.js":"1","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reportWebVitals.js":"2","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\store\\index.js":"3","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\App.js":"4","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\apikey.js":"5","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\index.js":"6","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\result\\index.js":"7","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\loading\\index.js":"8","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\userReducer.js":"9","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\actions\\userActions.js":"10","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\main\\main.js":"11","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\action-types.js":"12","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\answers\\answer.js":"13","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\input\\input.js":"14","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\register\\register.js":"15","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\countdownwrapper\\index.js":"16","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\dummyData.js":"17"},{"size":641,"mtime":1611159465868,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1610802122709,"results":"20","hashOfConfig":"19"},{"size":349,"mtime":1611159465870,"results":"21","hashOfConfig":"19"},{"size":976,"mtime":1611421693366,"results":"22","hashOfConfig":"19"},{"size":493,"mtime":1610806085766,"results":"23","hashOfConfig":"19"},{"size":189,"mtime":1611159465869,"results":"24","hashOfConfig":"19"},{"size":2888,"mtime":1611506830560,"results":"25","hashOfConfig":"19"},{"size":1623,"mtime":1611417646742,"results":"26","hashOfConfig":"19"},{"size":1066,"mtime":1611419259212,"results":"27","hashOfConfig":"19"},{"size":4240,"mtime":1611506830556,"results":"28","hashOfConfig":"19"},{"size":1380,"mtime":1611507137984,"results":"29","hashOfConfig":"19"},{"size":312,"mtime":1611330843942,"results":"30","hashOfConfig":"19"},{"size":6494,"mtime":1611507064137,"results":"31","hashOfConfig":"19"},{"size":3505,"mtime":1611419283339,"results":"32","hashOfConfig":"19"},{"size":3336,"mtime":1611412781014,"results":"33","hashOfConfig":"19"},{"size":594,"mtime":1611431471067,"results":"34","hashOfConfig":"19"},{"size":6339,"mtime":1611414061195,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3tjxz7",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\index.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reportWebVitals.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\store\\index.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\App.js",["76"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\apikey.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\index.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\result\\index.js",["77","78","79","80"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\loading\\index.js",["81"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\reducers\\userReducer.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\actions\\userActions.js",["82"],"import {\r\n  LOGIN_SUCCESS,\r\n  GET_APP_STATE,\r\n  LOGIN_FAILED,\r\n  START_QUIZ,\r\n  USER_RESULT,\r\n  USER_RESULT_FAILED\r\n} from \"../constants/action-types\";\r\nimport firebase from \"firebase\";\r\n\r\nexport const getUserData = value => {\r\n  return dispatch => {\r\n    firebase\r\n      .database()\r\n      .ref(\"users\")\r\n      .orderByChild(\"id\")\r\n      .equalTo(value)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        if (snapshot.exists()) {\r\n          snapshot.forEach(function(data) {\r\n            console.log(data.child(\"login\").val(), \"Error: passed snapsot\");\r\n\r\n            if (\r\n              data.child(\"login\").val() &&\r\n              !localStorage.getItem(\"id\") &&\r\n              data\r\n                .child(\"role\")\r\n                .val()\r\n                .toLowerCase() == \"user\"\r\n            ) {\r\n              console.log(\"Error: already login failed\");\r\n              dispatch({\r\n                type: LOGIN_FAILED,\r\n                payload: \"User is already login to another device\"\r\n              });\r\n            } else {\r\n              console.log(\"login sucess\", data.val());\r\n              data.ref.child(\"login\").set(true);\r\n              localStorage.setItem(\"id\", data.child(\"id\").val());\r\n              dispatch({ type: LOGIN_SUCCESS, payload: data.val() });\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"Error: failed\");\r\n          dispatch({ type: LOGIN_FAILED, payload: \"Invalid User key\" });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const getAppState = () => {\r\n  return dispatch => {\r\n    firebase\r\n      .database()\r\n      .ref(\"appState\")\r\n      .on(\"value\", snapshot => {\r\n        if (snapshot.exists()) {\r\n          snapshot.forEach(function(data) {\r\n            console.log(data.val(), \"awssssawssssawssss\");\r\n            dispatch({ type: GET_APP_STATE, payload: data.val() });\r\n          });\r\n        } else {\r\n          console.log(\"asdasxzczxc show toast invalid ID\");\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const getLoginState = () => {\r\n  return dispatch => {\r\n    firebase\r\n      .database()\r\n      .ref(\"loginState\")\r\n      .on(\"value\", snapshot => {\r\n        if (snapshot.exists()) {\r\n          snapshot.forEach(function(data) {\r\n            const dataValue = data.val();\r\n            if (dataValue.state) {\r\n              dispatch({ type: START_QUIZ, payload: \"\" });\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"abcdasad\");\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const startQuiz = () => {\r\n  console.log(START_QUIZ, \"START_QUIZSTART_QUIZ\");\r\n  return dispatch => {\r\n    firebase\r\n      .database()\r\n      .ref(\"loginState\")\r\n      .orderByChild(\"state\")\r\n      .once(\"value\", snapshot => {\r\n        snapshot.forEach(function(data) {\r\n          data.ref.child(\"state\").set(true);\r\n          dispatch({ type: START_QUIZ, payload: \"\" });\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserResult = value => {\r\n  return dispatch => {\r\n    firebase\r\n      .database()\r\n      .ref(\"userResults\")\r\n      .orderByChild(\"id\")\r\n      .equalTo(value)\r\n      .on(\"value\", snapshot => {\r\n        if (snapshot.exists()) {\r\n          console.log(\"Error: passed\");\r\n          snapshot.forEach(function(data) {\r\n            console.log(data.val(), \"user ersuultss\");\r\n            dispatch({ type: USER_RESULT, payload: data.val() });\r\n          });\r\n        } else {\r\n          console.log(\"Error: failed\");\r\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const storeAnswer = (obj, value) => {\r\n  console.log(obj, \"poo\", value);\r\n  return dispatch => {\r\n    firebase\r\n      .database()\r\n      .ref(\"userResults\")\r\n      .orderByChild(\"id\")\r\n      .equalTo(value)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        if (snapshot.exists()) {\r\n          console.log(\"Error: passed\");\r\n          snapshot.forEach(function(data) {\r\n            console.log(\"Error: passed\", data.val());\r\n            data.ref.child(\"score\").set(obj.score);\r\n            data.ref.child(\"totalCorrectAnswers\").set(obj.totalCorrectAnswers);\r\n          });\r\n        } else {\r\n          console.log(\"Error: failed\");\r\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\r\n        }\r\n      });\r\n  };\r\n};\r\n",["83","84"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\main\\main.js",["85"],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\action-types.js",[],"H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\answers\\answer.js",["86","87","88"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./answer.css\";\r\nimport CountDownWrapper from \"../countdownwrapper/index\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { data } from \"../../constants/dummyData\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Answers = ({ isAdmin, user, appState, userResult, actions }) => {\r\n  const [timer, setTimer] = useState(20);\r\n  const [clickable, isClickable] = useState(true);\r\n  let milliseconds = 100;\r\n  let seconds = 0;\r\n  const [answerColor1, setAnswerColor1] = useState(\"purple\");\r\n  const [answerColor2, setAnswerColor2] = useState(\"purple\");\r\n  const [answerColor3, setAnswerColor3] = useState(\"purple\");\r\n  const [answerColor4, setAnswerColor4] = useState(\"purple\");\r\n\r\n  const correctAnswer = () => {\r\n    const answerTime = +(seconds + \".\" + milliseconds);\r\n    const questionTime = +data.question[appState.state].timer;\r\n    const correctTime = questionTime - answerTime;\r\n    const score = +userResult.score + correctTime;\r\n    const obj = {\r\n      score: score.toFixed(2),\r\n      totalCorrectAnswers: userResult[\"totalCorrectAnswers\"] + 1\r\n    };\r\n    actions.storeAnswer(obj, userResult[\"id\"]);\r\n  };\r\n\r\n  const onCompleteTimer = () => {\r\n    isClickable(false);\r\n    milliseconds = 0;\r\n    console.log(user, \"userss\");\r\n    if (user.role == \"admin\" || JSON.stringify(user.role == \"admin\")) {\r\n      console.log(\"completessd timer asdasd\");\r\n      firebase\r\n        .database()\r\n        .ref(\"appState\")\r\n        .orderByChild(\"questionStatus\")\r\n        .once(\"value\", snapshot => {\r\n          snapshot.forEach(function(data) {\r\n            data.ref.child(\"questionStatus\").set(false);\r\n          });\r\n        });\r\n    }\r\n    data.question[appState.state].answer.forEach((e, i) => {\r\n      if (e.isTrue) {\r\n        answerSwitch(i + 1, \"green\");\r\n        return;\r\n      }\r\n    });\r\n  };\r\n  const answerSwitch = (answer, color) => {\r\n    switch (answer) {\r\n      case 1:\r\n        setAnswerColor1(color);\r\n        break;\r\n      case 2:\r\n        setAnswerColor2(color);\r\n        break;\r\n      case 3:\r\n        setAnswerColor3(color);\r\n        break;\r\n      default:\r\n        setAnswerColor4(color);\r\n        break;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(appState, \"appStateAsd\");\r\n    if (!appState.questionStatus) {\r\n      isClickable(false);\r\n    }\r\n  }, [appState]);\r\n  useEffect(() => {\r\n    console.log(appState, \"appStateAsd\");\r\n    isClickable(true);\r\n    setTimer(timer => timer + 1);\r\n    setAnswerColor1(\"purple\");\r\n    setAnswerColor2(\"purple\");\r\n    setAnswerColor3(\"purple\");\r\n    setAnswerColor4(\"purple\");\r\n  }, [appState.state]);\r\n  const handleClickAnswerCommon = (isTrue, value) => {\r\n    if (clickable) {\r\n      if (isTrue) correctAnswer();\r\n      answerSwitch(value, \"grey\");\r\n      isClickable(false);\r\n    }\r\n  };\r\n\r\n  const onClickNextQuestion = () => {\r\n    const milliseconds = appState.state + 1;\r\n    firebase\r\n      .database()\r\n      .ref(\"appState\")\r\n      .orderByChild(\"state\")\r\n      .once(\"value\", snapshot => {\r\n        snapshot.forEach(function(data) {\r\n          data.ref.child(\"state\").set(milliseconds);\r\n          data.ref.child(\"questionStatus\").set(true);\r\n        });\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    firebase\r\n      .database()\r\n      .ref(\"appState\")\r\n      .on(\"value\", () => {});\r\n  }, []);\r\n\r\n  const children = ({ remainingTime }) => {\r\n    if (milliseconds === 10) {\r\n      milliseconds = 100;\r\n    } else {\r\n      milliseconds--;\r\n    }\r\n    seconds = remainingTime % 1000;\r\n    if (seconds < 1) {\r\n      seconds = 0 + \"0\";\r\n      milliseconds = 0 + \"0\";\r\n    }\r\n\r\n    return `${seconds}:${milliseconds}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"answer_component\">\r\n      <div className=\"timer\" align=\"center\">\r\n        <CountDownWrapper\r\n          children={children}\r\n          onComplete={onCompleteTimer}\r\n          timer={timer}\r\n        />\r\n      </div>\r\n      <div align=\"center\" className=\"question\">\r\n        <p>{data.question[appState.state].description}</p>\r\n      </div>\r\n\r\n      <div className=\"answer_container\">\r\n        <div>\r\n          <Button\r\n            onClick={() =>\r\n              handleClickAnswerCommon(\r\n                data.question[appState.state].answer[0].isTrue,\r\n                1\r\n              )\r\n            }\r\n            className={answerColor1}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {data.question[appState.state].answer[0].details}\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            onClick={() =>\r\n              handleClickAnswerCommon(\r\n                data.question[appState.state].answer[1].isTrue,\r\n                2\r\n              )\r\n            }\r\n            className={answerColor2}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {data.question[appState.state].answer[1].details}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"answer_container\">\r\n        <div>\r\n          <Button\r\n            onClick={e =>\r\n              handleClickAnswerCommon(\r\n                data.question[appState.state].answer[2].isTrue,\r\n                3\r\n              )\r\n            }\r\n            className={answerColor3}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            isD\r\n          >\r\n            {data.question[appState.state].answer[2].details}\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            onClick={e =>\r\n              handleClickAnswerCommon(\r\n                data.question[appState.state].answer[3].isTrue,\r\n                4\r\n              )\r\n            }\r\n            className={answerColor4}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {data.question[appState.state].answer[3].details}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {isAdmin && (\r\n        <Button\r\n          onClick={onClickNextQuestion}\r\n          className=\"admin_button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Next Question\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = props => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Answers);\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\input\\input.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./input.css\";\r\nimport firebase from \"firebase\";\r\nimport * as Actions from \"../../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst CustomizedInputs = ({\r\n  actions,\r\n  error,\r\n  loginSuccess,\r\n  user,\r\n  isLoggedIn,\r\n  errorMessage\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [errorValue, setErrorValue] = useState(\"Please Enter Value\");\r\n  const [errors, isError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (loginSuccess) {\r\n      actions.getLoginState();\r\n      actions.getUserResult(localStorage.getItem(\"id\"));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    isError(error);\r\n  }, [error]);\r\n\r\n  const handleSubmit = () => {\r\n    actions.getUserData(value);\r\n    console.log(\"Error: \" + error);\r\n    if (error) {\r\n      setErrorValue(\"Please Enter Value\");\r\n      isError(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    isError(false);\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const startQuiz = () => {\r\n    actions.startQuiz();\r\n  };\r\n  return (\r\n    <div className=\"input_container\" align=\"center\">\r\n      {!loginSuccess && !isLoggedIn && (\r\n        <>\r\n          <RedditTextField\r\n            label=\"Enter your key\"\r\n            defaultValue={value}\r\n            onChange={e => handleChange(e)}\r\n            variant=\"filled\"\r\n            id=\"reddit-input\"\r\n          />\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            className=\"submitButton\"\r\n            disabled={!value}\r\n          >\r\n            submit\r\n          </Button>\r\n        </>\r\n      )}\r\n      {loginSuccess && !isLoggedIn && user.role === \"user\" && (\r\n        <>\r\n          <p style={{ color: \"white\" }}>Quiz will start soon</p>\r\n        </>\r\n      )}\r\n      {loginSuccess && !isLoggedIn && user.role === \"admin\" && (\r\n        <>\r\n          <Button\r\n            onClick={startQuiz}\r\n            variant=\"contained\"\r\n            className=\"submitButton\"\r\n          >\r\n            Start Quiz\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {errors && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = props => ({\r\n  loginSuccess: props.userReducer.loginSuccess,\r\n  isLoggedIn: props.userReducer.isLoggedIn,\r\n  user: props.userReducer.user,\r\n  error: props.userReducer.error,\r\n  errorMessage: props.userReducer.errorMessage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedInputs);\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\register\\register.js",["92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./register.css\";\r\nimport firebase from \"firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  },\r\n  focused: {}\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  );\r\n}\r\n\r\nconst Register = ({ isLoggedIn }) => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    familyName: \"\",\r\n    id: \"\",\r\n    role: \"admin\"\r\n  });\r\n  const handleSubmit = () => {\r\n    console.log(user, \"userss\");\r\n    let userRef = firebase.database().ref(\"users\");\r\n    let newUserRef = userRef.push();\r\n    newUserRef\r\n      .set(user)\r\n      .then(resp => {\r\n        console.log(resp);\r\n        const result = {\r\n          id: user.id,\r\n          name: user.name + \" \" + user.familyName,\r\n          score: 0,\r\n          totalCorrectAnswers: 0,\r\n          rank: 0\r\n        };\r\n        let userResultRef = firebase.database().ref(\"userResults\");\r\n        let userResults = userResultRef.push();\r\n        userResults\r\n          .set(result)\r\n          .then(resp => {\r\n            console.log(resp);\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (val, field) => {\r\n    setUser({\r\n      ...user,\r\n      [field]: val\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"input_container\" align=\"center\">\r\n      <RedditTextField\r\n        label=\"Name\"\r\n        defaultValue={user.name}\r\n        onChange={e => handleChange(e.target.value, \"name\")}\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n      <RedditTextField\r\n        label=\"Family Name\"\r\n        defaultValue={user.familyName}\r\n        onChange={e => handleChange(e.target.value, \"familyName\")}\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n\r\n      <RedditTextField\r\n        label=\"ID\"\r\n        defaultValue={user.id}\r\n        onChange={e => handleChange(e.target.value, \"id\")}\r\n        variant=\"filled\"\r\n        id=\"reddit-input\"\r\n      />\r\n\r\n      <Button\r\n        onClick={handleSubmit}\r\n        variant=\"contained\"\r\n        className=\"submitButton\"\r\n        disabled={!user.name || !user.id || !user.familyName}\r\n      >\r\n        submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = props => ({\r\n  isLoggedIn: props.userReducer.isLoggedIn\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //actions: bindActionCreators(Actions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\components\\countdownwrapper\\index.js",["94","95"],"import React from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\n\r\nconst CountDownWrapper = props => {\r\n  let seconds = 20;\r\n  let counter = 100;\r\n\r\n  console.log(\"hamza: timer -> \" + props.timer);\r\n  return (\r\n    <div>\r\n      <CountdownCircleTimer\r\n        onComplete={props.onComplete}\r\n        children={props.children}\r\n        key={props.timer}\r\n        isPlaying\r\n        duration={19}\r\n        size={100}\r\n        strokeWidth={4}\r\n        trailColor=\"#000000\"\r\n        colors=\"#ffffff\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CountDownWrapper;\r\n","H:\\mahin projects\\MASTERMIND\\mastermind\\src\\constants\\dummyData.js",[],{"ruleId":"96","severity":1,"message":"97","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":14},{"ruleId":"96","severity":1,"message":"100","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":19,"column":7,"nodeType":"98","messageId":"99","endLine":19,"endColumn":11},{"ruleId":"96","severity":1,"message":"102","line":28,"column":9,"nodeType":"98","messageId":"99","endLine":28,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":53,"column":6,"nodeType":"105","endLine":53,"endColumn":8,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":22,"column":6,"nodeType":"105","endLine":22,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":24,"column":115,"nodeType":"111","messageId":"112","endLine":24,"endColumn":117},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"96","severity":1,"message":"117","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":37,"column":19,"nodeType":"111","messageId":"112","endLine":37,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":37,"column":58,"nodeType":"111","messageId":"112","endLine":37,"endColumn":60},{"ruleId":"103","severity":1,"message":"118","line":86,"column":6,"nodeType":"105","endLine":86,"endColumn":22,"suggestions":"119"},{"ruleId":"96","severity":1,"message":"120","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"96","severity":1,"message":"121","line":47,"column":10,"nodeType":"98","messageId":"99","endLine":47,"endColumn":20},{"ruleId":"103","severity":1,"message":"122","line":55,"column":6,"nodeType":"105","endLine":55,"endColumn":12,"suggestions":"123"},{"ruleId":"96","severity":1,"message":"124","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"125","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":28},{"ruleId":"96","severity":1,"message":"126","line":5,"column":7,"nodeType":"98","messageId":"99","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"127","line":6,"column":7,"nodeType":"98","messageId":"99","endLine":6,"endColumn":14},"no-unused-vars","'Result' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'rows' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'datas'. Either include it or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.",["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'Register' is defined but never used.","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.",["132"],"'firebase' is defined but never used.","'errorValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions' and 'loginSuccess'. Either include them or remove the dependency array.",["133"],"'useEffect' is defined but never used.","'bindActionCreators' is defined but never used.","'seconds' is assigned a value but never used.","'counter' is assigned a value but never used.",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [datas]",{"range":"142","text":"143"},"Update the dependencies array to be: [actions]",{"range":"144","text":"145"},"Update the dependencies array to be: [appState, appState.state]",{"range":"146","text":"147"},"Update the dependencies array to be: [actions, loginSuccess, user]",{"range":"148","text":"149"},[1557,1559],"[datas]",[764,766],"[actions]",[2751,2767],"[appState, appState.state]",[1533,1539],"[actions, loginSuccess, user]"]