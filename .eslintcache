[{"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/index.js":"1","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reportWebVitals.js":"2","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/App.js":"3","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/store/index.js":"4","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/apikey.js":"5","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/index.js":"6","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/loading/index.js":"7","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/result/index.js":"8","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/userReducer.js":"9","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/actions/userActions.js":"10","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/main/main.js":"11","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/action-types.js":"12","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/register/register.js":"13","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/answers/answer.js":"14","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyData.js":"15","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/countdownwrapper/index.js":"16","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/input/index.js":"17","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/islamic/data.js":"18","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/gk/data.js":"19","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/nawait/data.js":"20","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/iq/data.js":"21","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyDataResult.js":"22"},{"size":620,"mtime":1611159305589,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610731866693,"results":"25","hashOfConfig":"24"},{"size":1727,"mtime":1611956175447,"results":"26","hashOfConfig":"24"},{"size":332,"mtime":1611159305592,"results":"27","hashOfConfig":"24"},{"size":482,"mtime":1610803753123,"results":"28","hashOfConfig":"24"},{"size":181,"mtime":1611159305590,"results":"29","hashOfConfig":"24"},{"size":1649,"mtime":1611776476624,"results":"30","hashOfConfig":"24"},{"size":4004,"mtime":1611857877275,"results":"31","hashOfConfig":"24"},{"size":1009,"mtime":1611507951152,"results":"32","hashOfConfig":"24"},{"size":4089,"mtime":1611507951132,"results":"33","hashOfConfig":"24"},{"size":2795,"mtime":1611960834778,"results":"34","hashOfConfig":"24"},{"size":306,"mtime":1611507951148,"results":"35","hashOfConfig":"24"},{"size":3209,"mtime":1611507951145,"results":"36","hashOfConfig":"24"},{"size":7446,"mtime":1611962536529,"results":"37","hashOfConfig":"24"},{"size":34172,"mtime":1611961990490,"results":"38","hashOfConfig":"24"},{"size":594,"mtime":1611776476622,"results":"39","hashOfConfig":"24"},{"size":5233,"mtime":1611960189873,"results":"40","hashOfConfig":"24"},{"size":10274,"mtime":1611774855577,"results":"41","hashOfConfig":"24"},{"size":8167,"mtime":1611775220443,"results":"42","hashOfConfig":"24"},{"size":7229,"mtime":1611774845693,"results":"43","hashOfConfig":"24"},{"size":8685,"mtime":1611774837425,"results":"44","hashOfConfig":"24"},{"size":4195,"mtime":1611857509954,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"hf6i4y",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/index.js",[],["97","98"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reportWebVitals.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/App.js",["99","100"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/store/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/apikey.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/index.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/loading/index.js",["101"],"import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Main from \"../main/main\";\nimport * as Actions from \"../../actions/userActions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({ isLoggedIn, actions, user, appState, userResult }) => {\n  const [Loadingg, isLoadingg] = useState(false);\n\n  useEffect(() => {\n    actions.getAppState();\n    if (localStorage.getItem(\"id\")) {\n      actions.getLoginState();\n      actions.getUserResult(localStorage.getItem(\"id\"));\n      actions.getUserData(localStorage.getItem(\"id\"));\n    }\n    setTimeout(function() {\n      isLoadingg(true);\n    }, 1000);\n    \n  }, []);\n  return (\n    <div>\n      {!Loadingg ? (\n        <div className=\"progress_bar\" align=\"center\">\n          <CircularProgress\n            style={{ color: \"#1A4173\" }}\n            className=\"progress_barColor\"\n            color=\"primary\"\n          />\n        </div>\n      ) : (\n        <div className=\"progress_bar\" align=\"center\">\n          <Main\n            userResult={userResult}\n            appState={appState}\n            user={user}\n            isLoggedIn={isLoggedIn}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n  userResult: props.userReducer.userResult,\n  appState: props.userReducer.appState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/result/index.js",["102","103","104","105"],"import React, { useEffect, useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport firebase from \"firebase\";\nimport \"./index.css\";\nimport { data } from \"../../constants/dummyDataResult\";\n\nconst Result = props => {\n  console.log(\"Result1: \" + props.appState);\n  const [resultShown, isResultShown] = useState(false);\n  const [data, setData] = useState([]);\n\n  let datas = [];\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"totalCorrectAnswers\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          datas.push(data.val());\n        });\n\n        datas.sort((a, b) =>\n          a.totalCorrectAnswers < b.totalCorrectAnswers\n            ? 1\n            : a.totalCorrectAnswers === b.totalCorrectAnswers\n            ? a.score > b.score\n              ? 1\n              : -1\n            : -1\n        );\n\n        setData(datas);\n        props.result(datas);\n      });\n  }, [props.appState]);\n\n  const showResultDb = () => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .orderByChild(\"showResult\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(\"showResult\").set(!props.appState.showResult);\n        });\n      });\n  };\n\n  console.log(JSON.stringify(data));\n  const showResultData = (result, index) => {\n    if (index < props.limit) {\n      return (\n        <>\n          <TableRow key={result.id}>\n            {props.limit === 50 && (\n              <TableCell>\n                <b className=\"color\">{index + 1}</b>\n              </TableCell>\n            )}\n            <TableCell className=\"color\" component=\"th\" scope=\"row\">\n              <p className=\"color\">{result.name}</p>\n            </TableCell>\n            <TableCell className=\"color\" align=\"right\">\n              <p className=\"color\">{result.totalCorrectAnswers}</p>\n            </TableCell>\n            <TableCell className=\"color\" align=\"right\">\n              <p className=\"color\">{result.score}</p>\n            </TableCell>\n          </TableRow>\n        </>\n      );\n    }\n  };\n  return (\n    <div>\n      <span\n        style={{\n          fontFamily: \"arial, sans-serif\",\n          fontSize: \"20px\",\n          margin: \"20%\"\n        }}\n      >\n        Results\n      </span>\n      {props.appState.showResult && (\n        <TableContainer className=\"container\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                {props.limit === 50 && (\n                  <TableCell>\n                    <b className=\"color\">Id</b>\n                  </TableCell>\n                )}\n\n                <TableCell>\n                  <b className=\"color\">Name</b>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <b className=\"color\">Correct Answers</b>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <b className=\"color\">Score</b>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((result, i) => {\n                return showResultData(result, i);\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <br />\n      {props.isAdmin ? (\n        <button\n          onClick={showResultDb}\n          style={{ marginTop: \"10%\" }}\n          color=\"white\"\n        >\n          {!props.appState.showResult ? \"Show result\" : \"Hide result\"}\n        </button>\n      ) : (\n        !props.appState.showResult && (\n          <p style={{ marginTop: 10, fontSize: 12 }}>\n            Top 15 Results will be shown after each category\n          </p>\n        )\n      )}\n    </div>\n  );\n};\nexport default Result;\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/reducers/userReducer.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/actions/userActions.js",["106"],"import {\n  LOGIN_SUCCESS,\n  GET_APP_STATE,\n  LOGIN_FAILED,\n  START_QUIZ,\n  USER_RESULT,\n  USER_RESULT_FAILED\n} from \"../constants/action-types\";\nimport firebase from \"firebase\";\n\nexport const getUserData = value => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            console.log(data.child(\"login\").val(), \"Error: passed snapsot\");\n\n            if (\n              data.child(\"login\").val() &&\n              !localStorage.getItem(\"id\") &&\n              data\n                .child(\"role\")\n                .val()\n                .toLowerCase() == \"user\"\n            ) {\n              console.log(\"Error: already login failed\");\n              dispatch({\n                type: LOGIN_FAILED,\n                payload: \"User is already login to another device\"\n              });\n            } else {\n              console.log(\"login sucess\", data.val());\n              data.ref.child(\"login\").set(true);\n              localStorage.setItem(\"id\", data.child(\"id\").val());\n              dispatch({ type: LOGIN_SUCCESS, payload: data.val() });\n            }\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: LOGIN_FAILED, payload: \"Invalid User key\" });\n        }\n      });\n  };\n};\n\nexport const getAppState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            console.log(data.val(), \"awssssawssssawssss\");\n            dispatch({ type: GET_APP_STATE, payload: data.val() });\n          });\n        } else {\n          console.log(\"asdasxzczxc show toast invalid ID\");\n        }\n      });\n  };\n};\n\nexport const getLoginState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function(data) {\n            const dataValue = data.val();\n            if (dataValue.state) {\n              dispatch({ type: START_QUIZ, payload: \"\" });\n            }\n          });\n        } else {\n          console.log(\"abcdasad\");\n        }\n      });\n  };\n};\n\nexport const startQuiz = () => {\n  console.log(START_QUIZ, \"START_QUIZSTART_QUIZ\");\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .orderByChild(\"state\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(\"state\").set(true);\n          dispatch({ type: START_QUIZ, payload: \"\" });\n        });\n      });\n  };\n};\n\nexport const getUserResult = value => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function(data) {\n            console.log(data.val(), \"user ersuultss\");\n            dispatch({ type: USER_RESULT, payload: data.val() });\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n\nexport const storeAnswer = (obj, value) => {\n  console.log(obj, \"poo\", value);\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function(data) {\n            console.log(\"Error: passed\", data.val());\n            data.ref.child(\"score\").set(obj.score);\n            data.ref.child(\"totalCorrectAnswers\").set(obj.totalCorrectAnswers);\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/main/main.js",["107","108","109","110"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/action-types.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/register/register.js",["111","112"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./register.css\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst Register = ({ isLoggedIn }) => {\n  const [user, setUser] = useState({\n    name: \"\",\n    familyName: \"\",\n    id: \"\",\n    role: \"admin\"\n  });\n  const handleSubmit = () => {\n    console.log(user, \"userss\");\n    let userRef = firebase.database().ref(\"users\");\n    let newUserRef = userRef.push();\n    newUserRef\n      .set(user)\n      .then(resp => {\n        console.log(resp);\n        const result = {\n          id: user.id,\n          name: user.name + \" \" + user.familyName,\n          score: 0,\n          totalCorrectAnswers: 0,\n          rank: 0\n        };\n        let userResultRef = firebase.database().ref(\"userResults\");\n        let userResults = userResultRef.push();\n        userResults\n          .set(result)\n          .then(resp => {\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleChange = (val, field) => {\n    setUser({\n      ...user,\n      [field]: val\n    });\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Name\"\n        defaultValue={user.name}\n        onChange={e => handleChange(e.target.value, \"name\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <RedditTextField\n        label=\"Family Name\"\n        defaultValue={user.familyName}\n        onChange={e => handleChange(e.target.value, \"familyName\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n\n      <RedditTextField\n        label=\"ID\"\n        defaultValue={user.id}\n        onChange={e => handleChange(e.target.value, \"id\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n        disabled={!user.name || !user.id || !user.familyName}\n      >\n        submit\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  isLoggedIn: props.userReducer.isLoggedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //actions: bindActionCreators(Actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/answers/answer.js",["113","114","115","116"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyData.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/countdownwrapper/index.js",["117","118"],"import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst CountDownWrapper = props => {\n  let seconds = 20;\n  let counter = 100;\n\n  console.log(props.duration, \"hamza: timer -> \" + props.timer);\n  return (\n    <div>\n      <CountdownCircleTimer\n        onComplete={props.onComplete}\n        children={props.children}\n        key={props.timer}\n        isPlaying\n        duration={props.duration}\n        size={100}\n        strokeWidth={4}\n        trailColor=\"#fff\"\n        colors=\"#000000\"\n      />\n    </div>\n  );\n};\nexport default CountDownWrapper;\n","/Users/tahmed/Desktop/clear/mastermind/mastermind/src/components/input/index.js",["119","120","121"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/islamic/data.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/gk/data.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/nawait/data.js",[],["122","123"],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/questions/iq/data.js",[],"/Users/tahmed/Desktop/clear/mastermind/mastermind/src/constants/dummyDataResult.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":23,"column":6,"nodeType":"135","endLine":23,"endColumn":8,"suggestions":"136"},{"ruleId":"128","severity":1,"message":"137","line":10,"column":10,"nodeType":"130","messageId":"131","endLine":10,"endColumn":14},{"ruleId":"128","severity":1,"message":"138","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":21},{"ruleId":"128","severity":1,"message":"139","line":14,"column":23,"nodeType":"130","messageId":"131","endLine":14,"endColumn":36},{"ruleId":"133","severity":1,"message":"140","line":42,"column":6,"nodeType":"135","endLine":42,"endColumn":22,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":30,"column":32,"nodeType":"144","messageId":"145","endLine":30,"endColumn":34},{"ruleId":"128","severity":1,"message":"146","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"147","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":12,"column":24,"nodeType":"150","messageId":"151","endLine":12,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":13,"column":16,"nodeType":"144","messageId":"145","endLine":13,"endColumn":18},{"ruleId":"128","severity":1,"message":"146","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"152","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":39,"column":19,"nodeType":"144","messageId":"145","endLine":39,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":39,"column":58,"nodeType":"144","messageId":"145","endLine":39,"endColumn":60},{"ruleId":"133","severity":1,"message":"153","line":94,"column":6,"nodeType":"135","endLine":94,"endColumn":22,"suggestions":"154"},{"ruleId":"133","severity":1,"message":"153","line":129,"column":6,"nodeType":"135","endLine":129,"endColumn":8,"suggestions":"155"},{"ruleId":"128","severity":1,"message":"156","line":5,"column":7,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"128","severity":1,"message":"157","line":6,"column":7,"nodeType":"130","messageId":"131","endLine":6,"endColumn":14},{"ruleId":"128","severity":1,"message":"158","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":16},{"ruleId":"128","severity":1,"message":"159","line":47,"column":10,"nodeType":"130","messageId":"131","endLine":47,"endColumn":20},{"ruleId":"133","severity":1,"message":"160","line":55,"column":6,"nodeType":"135","endLine":55,"endColumn":12,"suggestions":"161"},{"ruleId":"124","replacedBy":"162"},{"ruleId":"126","replacedBy":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Result' is defined but never used.","Identifier","unusedVar","'bgWhite' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'data' is defined but never used.","'resultShown' is assigned a value but never used.","'isResultShown' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'datas' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["167"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Register' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'bindActionCreators' is defined but never used.","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.",["168"],["169"],"'seconds' is assigned a value but never used.","'counter' is assigned a value but never used.","'firebase' is defined but never used.","'errorValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions' and 'loginSuccess'. Either include them or remove the dependency array.",["170"],["164"],["165"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [actions]",{"range":"181","text":"182"},"Update the dependencies array to be: [datas, props, props.appState]",{"range":"183","text":"184"},"Update the dependencies array to be: [appState, appState.state]",{"range":"185","text":"186"},"Update the dependencies array to be: [appState]",{"range":"187","text":"188"},"Update the dependencies array to be: [actions, loginSuccess, user]",{"range":"189","text":"190"},[748,750],"[actions]",[1242,1258],"[datas, props, props.appState]",[3005,3021],"[appState, appState.state]",[3911,3913],"[appState]",[1479,1485],"[actions, loginSuccess, user]"]